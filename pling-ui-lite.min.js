!function(context){"use strict";context.pling={}}(window),function(){"use strict";function PlingUiConfig($provide,$httpProvider){$provide.decorator("$log",function($delegate,shadowLogger){return shadowLogger($delegate)}),$httpProvider.interceptors.push("plingRequestInterceptor")}function PlingUiRun(options,$injector){var cache=null;options.onRun&&options.onRun.cacheViews&&(cache=$injector.get("cacheService"),cache.cacheViews())}angular.module("plingUiLite",[]),angular.module("plingUiLite").config(["$provide","$httpProvider",PlingUiConfig]),angular.module("plingUiLite").run(["boot.options","$injector",PlingUiRun])}(),function(){"use strict";function ApplicationsService($window,$localstorage,httpService,tokenService){this.getLocal=function(){var localAppData=$localstorage.get("PLING-APPS");return localAppData=localAppData?JSON.parse(localAppData):{}},this.getCurrentAppModule=function(){var currentAppModule=$localstorage.get("PLING-CURRENT-APP");return currentAppModule},this.getCurrentApp=function(){var currentApp={appModule:$localstorage.get("PLING-CURRENT-APP"),env:$localstorage.get("PLING-CURRENT-ENV")};return currentApp},this.getCallbackUrl=function(appId,cb){httpService.post("accounts","_oauth",{appid:appId}).success(function(data){data.callbackUrl?cb(null,data.callbackUrl+"?token="+tokenService.get()):cb("Callback url not found")}).error(function(reason){cb(reason||"Server Unavailable",null)})},this.redirect=function(url){$window.location.href=url}}angular.module("plingUiLite").service("applicationsService",ApplicationsService),ApplicationsService.$inject=["$window","$localstorage","httpService","tokenService"]}(),function(){"use strict";function CepService(httpService){this.getCep=function(cep){return httpService.get("smart","cep",cep)}}angular.module("plingUiLite").service("cepService",CepService),CepService.$inject=["httpService"]}(),function(){"use strict";function CoreApiService(options,$window,$rootScope,$http){var self=this;this.getAppCoreUrl=function(app,module){var url;return url=options.core_url+options.def_api_version,url+=app?"/"+app:"",url+=module?"/"+module:""},this.getApplicationName=function(){return options.def_api_app.charAt(0).toUpperCase()+options.def_api_app.slice(1)},this.redirectToLoginWithCallback=function(callbackUrl){var callbackQueryString;$rootScope.$emit("PLING-SERVICE-BAR-ISLOADING",!0),callbackQueryString=callbackUrl?"?callbackurl="+callbackUrl:"",$http.get(self.getAppCoreUrl("accounts","products/Login/"+options.environment)).success(function(data){data&&($window.location.href=data.callbackUrl+callbackQueryString)}).error(function(){return console.log("Erro ao obter URL para aplicação de Login"),$rootScope.$emit("PLING-SERVICE-BAR-ISLOADING",!1),!1})},this.redirectToControlPanel=function(){$rootScope.$emit("PLING-SERVICE-BAR-ISLOADING",!0),$http.get(self.getAppCoreUrl("accounts","products/Painel/"+options.environment)).success(function(data){data&&($window.location.href=data.callbackUrl)}).error(function(){return console.log("Erro ao obter URL para Minha Conta"),$rootScope.$emit("PLING-SERVICE-BAR-ISLOADING",!1),!1})}}angular.module("plingUiLite").service("coreApiService",CoreApiService),CoreApiService.$inject=["boot.options","$window","$rootScope","$http"]}(),function(){"use strict";function CredentialsService(httpService,$localstorage,core){this.logout=function(){httpService.post("accounts","logout").success(function(){$localstorage.clearAll(),core.redirectToLoginWithCallback()}).error(function(reason){console.log(reason)})},this.getLocal=function(){var userData=$localstorage.get("PLING-USER");return userData?userData=JSON.parse(userData):null}}angular.module("plingUiLite").service("credentialsService",CredentialsService),CredentialsService.$inject=["httpService","$localstorage","coreApiService"]}(),function(){"use strict";function HttpHelperService($http,core,$q){var groups={};this.registerUrl=function(url,groupName){var defer;return groupName||(groupName="default"),groups[groupName]?defer=groups[groupName]:(defer=$q.defer(),groups[groupName]=defer),defer.promise},this.cancelRequest=function(groupName){groupName||(groupName="default"),groups[groupName].resolve("cancelled"),delete groups[groupName]}}angular.module("plingUiLite").service("httpHelperService",HttpHelperService),HttpHelperService.$inject=["$http","coreApiService","$q"]}(),function(){"use strict";function HttpService($http,core){this.save=function(app,module,data){return $http.post(core.getAppCoreUrl(app,module),data)},this.update=function(app,module,data){return $http.put(core.getAppCoreUrl(app,module),data)},this.upload=function(app,module,file){return $http.post(core.getAppCoreUrl(app,module),file,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})},this.get=function(app,module,id){var type,url=core.getAppCoreUrl(app,module);return id?url+="/"+id:module.indexOf("public")>0&&(type={responseType:"arraybuffer"}),$http.get(url,type)},this.getImage=function(url,cb){this.get("credentials/public?imagepath="+url).success(function(imageDownloadData){var blob=new Blob([imageDownloadData],{type:"image/jpeg"}),reader=new FileReader;reader.readAsDataURL(blob),reader.onloadend=function(){cb(null,reader.result)}}).error(function(err){cb(err)})},this.post=function(app,module,data){var req={method:"POST",url:core.getAppCoreUrl(app,module),headers:{"Content-Type":"application/json"},data:data};return $http(req)},this.put=function(app,module,data){var req={method:"PUT",url:core.getAppCoreUrl(app,module),headers:{"Content-Type":"application/json"},data:data};return $http(req)},this["delete"]=function(app,module,id){var req={method:"DELETE",url:core.getAppCoreUrl(app,module)+"/"+id,headers:{"Content-Type":"application/json"}};return $http(req)}}angular.module("plingUiLite").service("httpService",HttpService),HttpService.$inject=["$http","coreApiService","httpHelperService"]}(),function(){"use strict";function TokenService($http,$localstorage,coreApiService){this.get=function(){return $localstorage.get("PLING-TOKEN")},this.set=function(token){return!!token&&($localstorage.set("PLING-TOKEN",token),!0)},this.validate=function(cb){$http.get(coreApiService.getAppCoreUrl("accounts","me")).success(function(credentialData){cb(null,credentialData)}).error(function(reason){cb(reason)})}}angular.module("plingUiLite").service("tokenService",TokenService),TokenService.$inject=["$http","$localstorage","coreApiService"]}(),function(context,logger){"use strict";function Bootstrapper(){this.isBootstrapped=!1}Bootstrapper.prototype.Angular=function(root,appname,source,cb){var self=this;window.localStorage.setItem("PLING-CURRENT-APP",appname),context.loader.load(source,function(err,options){options.core_url="local"===options.environment?options.local_core_url||options.core_url:options.core_url;var localCallbackUrl,token=window.localStorage["PLING-TOKEN"],queryString=window.localStorage["PLING-QUERY-STRING"]||window.location.search,coreUrl=options.core_url,environment=options.environment,defApiVersion=options.def_api_version,initInjector=angular.injector(["ng"]),$http=initInjector.get("$http"),currentUrl=window.location.href;return window.localStorage.setItem("PLING-CURRENT-ENV",environment),err?(logger.warn("Arquivo de configuracao nao encontrado!"),logger.debug(err),!1):"auth"in options&&options.auth===!1?(token?$http.get(coreUrl+defApiVersion+"/accounts/me?appmodule="+appname+"&environment="+environment,{headers:{Authorization:token}}).success(function(credentialData){window.localStorage.setItem("PLING-APPS",JSON.stringify(credentialData.profilesProducts)),delete credentialData.profilesProducts,delete credentialData.iat,delete credentialData.exp,window.localStorage.setItem("PLING-USER",JSON.stringify(credentialData)),angular.module(appname).value("boot.options",options),angular.bootstrap(root,[appname]),self.isBootstrapped=!0,cb&&cb()}).error(function(reason){logger.error(reason),window.localStorage.clear(),window.localStorage.setItem("PLING-CURRENT-APP",appname),window.localStorage.setItem("PLING-CURRENT-ENV",environment),angular.module(appname).value("boot.options",options),angular.bootstrap(root,[appname]),self.isBootstrapped=!0}):(angular.module(appname).value("boot.options",options),angular.bootstrap(root,[appname]),self.isBootstrapped=!0,cb&&cb()),!1):(token||1!==queryString.indexOf("token=")||window.localStorage.setItem("PLING-TOKEN",queryString.split("=")[1]),void(!token&&coreUrl?(window.localStorage.clear(),localCallbackUrl=currentUrl?"?callbackurl="+currentUrl:"",$http.get(coreUrl+defApiVersion+"/accounts/products/Login/"+environment).success(function(urlData){return window.location.href=urlData.callbackUrl+localCallbackUrl,!1}).error(function(reason){return logger.error(reason),!1})):$http.get(coreUrl+defApiVersion+"/accounts/me?appmodule="+appname+"&environment="+environment,{headers:{Authorization:token}}).success(function(credentialData){window.localStorage.setItem("PLING-APPS",JSON.stringify(credentialData.profilesProducts)),credentialData.modules&&(window.localStorage.setItem("PLING-MODULES",JSON.stringify(credentialData.modules)),pling.loader.settings.menu=[],pling.loader.settings.submenu=[],credentialData.modules.forEach(function(module){module.config.isSubMenu?pling.loader.settings.submenu.push(module):module.config.isMenu&&!module.config.isSubMenu&&pling.loader.settings.menu.push(module)})),credentialData.viewPreferences&&window.localStorage.setItem("PLING-CURRENT-VIEW-PREFERENCES",JSON.stringify(credentialData.viewPreferences)),delete credentialData.profilesProducts,delete credentialData.iat,delete credentialData.exp,window.localStorage.setItem("PLING-USER",JSON.stringify(credentialData)),angular.module(appname).value("boot.options",options),angular.bootstrap(root,[appname]),self.isBootstrapped=!0,cb&&cb()}).error(function(reason){logger.error(reason),window.localStorage.clear(),localCallbackUrl=currentUrl?"?callbackurl="+currentUrl:"",$http.get(coreUrl+defApiVersion+"/accounts/Login/"+environment).success(function(urlData){return window.location.href=urlData.callbackUrl+localCallbackUrl,!1}).error(function(reason){return logger.error(reason),!1})})))})},context.boot=new Bootstrapper}(window.pling,window.console),function(dom,logger,context){"use strict";function onDOMLoaded(){var root,directive="plg-app",source="src",filter="["+directive+"]";root=dom.querySelector(filter),root?(context.name=root.getAttribute(directive),context.source=root.getAttribute(source)||"pling.conf.json",logger.info("AngularJS 1.5.x spa check:",!0),context.boot.Angular(root,context.name,context.source,function(err){err?logger.error("Could not boot app ",context.name):logger.info("Bootstrapped:",context.boot.isBootstrapped)})):logger.info("AngularJS 1.5.x spa check:",!1)}dom.addEventListener("DOMContentLoaded",onDOMLoaded)}(document,window.console,window.pling),function(context){"use strict";function ConfLoader(){this.settings=null}ConfLoader.prototype.load=function(filepath,cb){var parsed,self=this,xhr=new XMLHttpRequest;xhr.onreadystatechange=function(){4===xhr.readyState&&(200===xhr.status?(parsed=JSON.parse(xhr.responseText),self.settings=parsed,cb(null,parsed)):cb("Error loading file - status "+xhr.status,{}))},xhr.onerror=function(err){cb(err)},xhr.open("GET",filepath,!0),xhr.setRequestHeader("Content-Type","application/json;charset=UTF-8"),xhr.send()},context.loader=new ConfLoader}(window.pling),function(){"use strict";function CachingService($templateCache,$route,$http){this.cacheViews=function(cacheObj,routeObj){var partial,route,viewCache=cacheObj||$templateCache,router=routeObj||$route;for(route in router.routes)router.routes.hasOwnProperty(route)&&(partial=router.routes[route].templateUrl,partial&&$http.get(partial,{cache:viewCache}))}}angular.module("plingUiLite").service("cacheService",CachingService),CachingService.$inject=["$templateCache","$route","$http"]}(),function(){"use strict";function $LocalStorage($window){return{clearAll:function(){$window.localStorage.clear()},set:function(key,value){$window.localStorage[key]=value},get:function(key){return $window.localStorage[key]},setObject:function(key,value){$window.localStorage[key]=JSON.stringify(value)},getObject:function(key){return JSON.parse($window.localStorage[key]||"{}")}}}angular.module("plingUiLite").service("$localstorage",$LocalStorage),$LocalStorage.$inject=["$window"]}(),function(){"use strict";function $SessionStorage($window){return{clearAll:function(){$window.localStorage.clear()},set:function(key,value){$window.localStorage[key]=value},get:function(key){return $window.localStorage[key]},setObject:function(key,value){$window.localStorage[key]=JSON.stringify(value)},getObject:function(key){return JSON.parse($window.localStorage[key]||"{}")}}}angular.module("plingUiLite").service("sessionstorage",$SessionStorage),$SessionStorage.$inject=["$window"]}(),function(){"use strict";function PlingRequestInterceptor($q,$window){return{request:function(config){var isAuth=$window.localStorage.getItem("PLING-TOKEN");return isAuth!==!1&&(config.headers.Authorization=$window.localStorage.getItem("PLING-TOKEN")),config},requestError:function(reason){return $q.reject(reason)},response:function(response){return response||$q.when(response)},responseError:function(reason){return $q.reject(reason)}}}angular.module("plingUiLite").factory("plingRequestInterceptor",PlingRequestInterceptor),PlingRequestInterceptor.$inject=["$q","$window"]}(document,window.console,window.pling),function(){"use strict";function PlingUiExceptionHandler($injector){return function(exception,cause){var dispatcher=null,logger=null,data={error:exception,details:cause};logger=$injector.get("$log"),logger.error(exception),cause&&logger.debug(cause),dispatcher=$injector.get("$rootScope"),dispatcher.$broadcast("PLINGUI_INTERNAL_ERROR",data)}}angular.module("plingUiLite").factory("$exceptionHandler",PlingUiExceptionHandler),PlingUiExceptionHandler.$inject=["$injector"]}(),function(){"use strict";function PlingUiLogger(){return function($delegate){return{log:function(){this.dispatch("log",arguments)},info:function(){this.dispatch("info",arguments)},error:function(){this.dispatch("error",arguments)},warn:function(){this.dispatch("warn",arguments)},dispatch:function(method,params){var arg,proc=$delegate[method]||$delegate.log,stamp=(new Date).toString(),prefix="["+stamp+"]["+method+"]::",msg=[];if(method){msg.push(prefix);for(arg in params)params.hasOwnProperty(arg)&&msg.push(params[arg]);proc.apply(null,msg)}}}}}angular.module("plingUiLite").factory("shadowLogger",PlingUiLogger)}();
//# sourceMappingURL=pling-ui-lite.min.js.map
