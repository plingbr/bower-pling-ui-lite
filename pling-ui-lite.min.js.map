{"version":3,"sources":["main.js","app-module.js","core/boot/bootstrapper.js","core/boot/index.js","core/boot/loader.js","core/caching/caching-service.js","core/apis/applications-service.js","core/apis/card-validator-service.js","core/apis/cep-service.js","core/apis/coreapi-service.js","core/apis/credentials-service.js","core/apis/customers-service.js","core/apis/http-helper.js","core/apis/http-service.js","core/apis/token-service.js","core/commons/localstorage-service.js","core/commons/sessionstorage-service.js","core/config/interceptor-factory.js","core/debugging/error-handler.js","core/debugging/logger.js"],"names":["context","pling","window","PlingUiConfig","$provide","$httpProvider","decorator","$delegate","shadowLogger","interceptors","push","PlingUiRun","options","$injector","cache","onRun","cacheViews","get","angular","module","config","run","logger","Bootstrapper","this","isBootstrapped","prototype","Angular","root","appname","source","cb","self","localStorage","setItem","loader","load","err","core_url","environment","local_core_url","localCallbackUrl","token","queryString","location","search","coreUrl","defApiVersion","def_api_version","initInjector","injector","$http","currentUrl","href","warn","debug","auth","value","bootstrap","headers","Authorization","success","credentialData","JSON","stringify","profilesProducts","iat","exp","error","reason","clear","indexOf","split","urlData","callbackUrl","modules","settings","menu","submenu","forEach","isSubMenu","isMenu","viewPreferences","boot","console","dom","onDOMLoaded","directive","filter","querySelector","name","getAttribute","info","addEventListener","document","ConfLoader","filepath","parsed","xhr","XMLHttpRequest","onreadystatechange","readyState","status","parse","responseText","onerror","open","setRequestHeader","send","CachingService","$templateCache","$route","cacheObj","routeObj","partial","route","viewCache","router","routes","hasOwnProperty","templateUrl","service","$inject","ApplicationsService","$window","$localstorage","httpService","tokenService","getLocal","localAppData","getCurrentAppModule","currentAppModule","getCurrentApp","currentApp","appModule","env","getCallbackUrl","appId","post","appid","data","redirect","url","CardValidatorService","luhn10","identifier","num","sum","alt","i","length","parseInt","charAt","validateDate","date","now","Date","month","substr","year","getFullYear","getTime","types","niceType","type","prefixPattern","exactPattern","gaps","lengths","code","size","getValidYears","nowYear","validYears","validate","cardNumber","dateExpiration","cvv","number","numberResult","dateResult","validType","isValid","toString","test","validateCardNumber","CepService","getCep","cep","CoreApiService","$rootScope","getAppCoreUrl","app","getApplicationName","def_api_app","toUpperCase","slice","redirectToLoginWithCallback","callbackQueryString","$emit","log","redirectToControlPanel","getSocialMedia","facebook","twitter","getCurrentBusiness","current_business","CredentialsService","core","$q","getCredential","setObject","logout","clearAll","login","credential","deferred","defer","loginData","set","reject","resolve","promise","userData","CustomersService","createCustomer","customer","customerData","updateCustomer","put","getCustomer","customerId","HttpHelperService","groups","registerUrl","groupName","cancelRequest","HttpService","save","update","upload","file","transformRequest","identity","Content-Type","undefined","id","responseType","getImage","imageDownloadData","blob","Blob","reader","FileReader","readAsDataURL","onloadend","result","req","method","TokenService","coreApiService","$LocalStorage","key","getObject","$SessionStorage","PlingRequestInterceptor","request","isAuth","getItem","requestError","response","when","responseError","factory","PlingUiExceptionHandler","exception","cause","dispatcher","details","$broadcast","PlingUiLogger","dispatch","arguments","params","arg","proc","stamp","prefix","msg","apply"],"mappings":"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","file":"pling-ui-lite.min.js","sourcesContent":["(function (context) {\n    'use strict';\n\n    context.pling = {};\n\n}(window));\n","(function () {\n    'use strict';\n\n    angular\n        .module('plingUiLite', []);\n\n    angular\n        .module('plingUiLite')\n        .config(['$provide', '$httpProvider', PlingUiConfig]);\n\n    angular\n        .module('plingUiLite')\n        .run([ 'boot.options', '$injector', PlingUiRun ]);\n\n    function PlingUiConfig($provide, $httpProvider) {\n        $provide.decorator('$log', function ($delegate, shadowLogger) {\n            return shadowLogger($delegate);\n        });\n\n        // Interceptor that add token in each Header Request\n        $httpProvider.interceptors.push('plingRequestInterceptor');\n    }\n\n    function PlingUiRun(options, $injector) {\n        var cache = null;\n\n        if (options.onRun && options.onRun.cacheViews) {\n            cache = $injector.get('cacheService');\n            cache.cacheViews();\n        }\n    }\n}());\n","(function (context, logger) {\n    'use strict';\n\n    // creating namespace\n    function Bootstrapper() {\n        this.isBootstrapped = false;\n    }\n\n    // boot a module\n    Bootstrapper.prototype.Angular = function (root, appname, source, cb) {\n        var self = this;\n\n        window.localStorage.setItem('PLING-CURRENT-APP', appname);\n\n        // loading file\n        context.loader.load(source, function (err, options) {\n\n            options.core_url = options.environment === 'local' ? options.local_core_url || options.core_url : options.core_url;\n\n            var\n                token         = window.localStorage['PLING-TOKEN'],\n                queryString   = window.localStorage['PLING-QUERY-STRING'] || window.location.search,\n                coreUrl       = options.core_url,\n                environment   = options.environment,\n                defApiVersion = options.def_api_version,\n                initInjector  = angular.injector(['ng']),\n                $http         = initInjector.get('$http'),\n                currentUrl    = window.location.href,\n                localCallbackUrl;\n\n            window.localStorage.setItem('PLING-CURRENT-ENV', environment);\n\n            // checking errors...\n            if (err) {\n                logger.warn('Arquivo de configuracao nao encontrado!');\n                logger.debug(err);\n\n                return false;\n            }\n\n           // No authentication\n           if ('auth' in options && options.auth === false) {\n               // saving boot settings\n               angular.module(appname).value('boot.options', options); // eslint-disable-line\n\n               // starting app\n               angular.bootstrap(root, [appname]);\n               self.isBootstrapped = true;\n\n               // calling callback\n               if (cb) cb();\n\n               return false;\n           } else if (token) {\n               $http\n                 .get(coreUrl + defApiVersion + '/accounts/me' + '?appmodule=' + appname + '&environment=' + environment, {\n                   'headers': { 'Authorization': token }\n                 })\n                 .success(function(credentialData) {\n                   window.localStorage.setItem('PLING-APPS', JSON.stringify(credentialData.profilesProducts));\n\n                   delete credentialData.profilesProducts;\n                   delete credentialData.iat;\n                   delete credentialData.exp;\n\n                   window.localStorage.setItem('PLING-USER', JSON.stringify(credentialData));\n\n                   // saving boot settings\n                   angular.module(appname).value('boot.options', options); // eslint-disable-line\n\n                   // starting app\n                   angular.bootstrap(root, [appname]);\n                   self.isBootstrapped = true;\n\n                   // calling callback\n                   if (cb) cb();\n                 })\n                 .error(function(reason) {\n                   logger.error(reason);\n                   window.localStorage.clear();\n                   window.localStorage.setItem('PLING-CURRENT-APP', appname);\n                   window.localStorage.setItem('PLING-CURRENT-ENV', environment);\n                   // saving boot settings\n                   angular.module(appname).value('boot.options', options); // eslint-disable-line\n                   // starting app\n                   angular.bootstrap(root, [appname]);\n                   self.isBootstrapped = true;\n               });\n           }\n\n            // checking for the token\n            if (!token && queryString.indexOf('token=') === 1) {\n                window.localStorage.setItem('PLING-TOKEN', queryString.split('=')[1]);\n            }\n\n            // if there's no token it must redirect to login\n            if (!token && coreUrl) {\n                window.localStorage.clear();\n                localCallbackUrl = currentUrl ? '?callbackurl=' + currentUrl : '';\n                $http\n                    .get(coreUrl + defApiVersion + '/accounts/products/Login/' + environment)\n                    .success(function(urlData) {\n                        window.location.href = urlData.callbackUrl + localCallbackUrl;\n                        return false;\n                    })\n                    .error(function(reason) {\n                        logger.error(reason);\n                        return false;\n                    });\n            }\n\n            // else it must validate it and then start the application\n            else {\n                $http\n                    .get(coreUrl + defApiVersion + '/accounts/me' + '?appmodule=' + appname + '&environment=' + environment, {\n                        'headers': { 'Authorization': token }\n                    })\n                    .success(function(credentialData) {\n\n                        window.localStorage.setItem('PLING-APPS', JSON.stringify(credentialData.profilesProducts));\n\n                        if (credentialData.modules) {\n                            window.localStorage.setItem('PLING-MODULES', JSON.stringify(credentialData.modules));\n\n                            pling.loader.settings.menu    = []; // eslint-disable-line\n                            pling.loader.settings.submenu = []; // eslint-disable-line\n\n                            credentialData.modules.forEach(function(module) {\n                                if (module.config.isSubMenu) {\n                                    pling.loader.settings.submenu.push(module); // eslint-disable-line\n                                } else if (module.config.isMenu && !module.config.isSubMenu) {\n                                    pling.loader.settings.menu.push(module);    // eslint-disable-line\n                                }\n                            });\n                        }\n\n                        if (credentialData.viewPreferences)\n                            window.localStorage.setItem('PLING-CURRENT-VIEW-PREFERENCES', JSON.stringify(credentialData.viewPreferences));\n\n                        delete credentialData.profilesProducts;\n                        delete credentialData.iat;\n                        delete credentialData.exp;\n\n                        window.localStorage.setItem('PLING-USER', JSON.stringify(credentialData));\n\n                        // saving boot settings\n                        angular.module(appname).value('boot.options', options); // eslint-disable-line\n\n                        // starting app\n                        angular.bootstrap(root, [appname]);\n                        self.isBootstrapped = true;\n\n                        // calling callback\n                        if (cb) cb();\n                    })\n                    .error(function(reason) {\n                        logger.error(reason);\n                        window.localStorage.clear();\n                        localCallbackUrl = currentUrl ? '?callbackurl=' + currentUrl : '';\n                        $http\n                            .get(coreUrl + defApiVersion + '/accounts/Login/' + environment)\n                            .success(function(urlData) {\n                                window.location.href = urlData.callbackUrl + localCallbackUrl;\n                                return false;\n                            })\n                            .error(function(reason) {\n                                logger.error(reason);\n                                return false;\n                            });\n                    });\n            }\n        });\n    };\n\n    // creating instance\n    context.boot = new Bootstrapper();\n\n}(window.pling, window.console));\n","(function (dom, logger, context) {\n    'use strict';\n\n    // Content Loaded listener\n    function onDOMLoaded() {\n\n        // detect angular application 'directive'\n        var root,\n            directive = 'plg-app',\n            source    = 'src',\n            filter    = '[' + directive + ']';\n\n        // retrieving root element\n        root = dom.querySelector(filter);\n\n        // working on root\n        if (root) {\n\n            // retrieving app name\n            context.name   = root.getAttribute(directive);\n            context.source = root.getAttribute(source) || 'pling.conf.json';\n\n            // loading config file\n            logger.info('AngularJS 1.5.x spa check:', true);\n            context.boot.Angular(root, context.name, context.source, function (err) {\n\n                if (err) logger.error('Could not boot app ', context.name);\n                else logger.info('Bootstrapped:', context.boot.isBootstrapped);\n\n            });\n\n        } else {\n            logger.info('AngularJS 1.5.x spa check:', false);\n        }\n    }\n\n    dom.addEventListener('DOMContentLoaded', onDOMLoaded);\n\n}(document, window.console, window.pling));","(function (context) {\n    'use strict';\n\n    // creating namespace\n    function ConfLoader() {\n        this.settings = null;\n    }\n\n    // loading file\n    ConfLoader.prototype.load = function (filepath, cb) {\n        var self = this,\n            parsed,\n            xhr = new XMLHttpRequest(); // eslint-disable-line\n\n        // sending result\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n\n                    parsed = JSON.parse(xhr.responseText);\n                    self.settings = parsed;\n\n                    cb(null, parsed);\n                } else {\n                    cb('Error loading file - status ' + xhr.status, {});\n                }\n            }\n        };\n\n        // handling error\n        xhr.onerror = function (err) {\n            cb(err);\n        };\n\n        // fetching file\n        xhr.open('GET', filepath, true);\n        xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\n        xhr.send();\n    };\n\n    // creating instance\n    context.loader = new ConfLoader();\n}(window.pling));","(function() {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .service('cacheService', CachingService);\n\n    CachingService.$inject = [ '$templateCache', '$route', '$http' ];\n\n    function CachingService($templateCache, $route, $http) {\n\n\n        this.cacheViews = function (cacheObj, routeObj) {\n\n            // setting defaults\n            var\n                partial, route,\n                viewCache = cacheObj || $templateCache,\n                router = routeObj || $route;\n\n            // looping routes\n            for (route in router.routes) {\n\n                if (router.routes.hasOwnProperty(route)) {\n\n                    // evaluate partial\n                    partial = router.routes[route].templateUrl;\n\n                    if (partial)\n                        // caching route\n                        $http.get(partial, {'cache': viewCache});\n                }\n            }\n        };\n    }\n\n}());\n","(function() {\n\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .service('applicationsService', ApplicationsService);\n\n    ApplicationsService.$inject = [ '$window', '$localstorage', 'httpService', 'tokenService' ];\n\n    function ApplicationsService($window, $localstorage, httpService, tokenService) {\n\n        this.getLocal = function() {\n            var localAppData = $localstorage.get('PLING-APPS');\n\n            localAppData = localAppData ? JSON.parse(localAppData) : {};\n            return localAppData;\n        };\n\n        this.getCurrentAppModule = function() {\n            var currentAppModule = $localstorage.get('PLING-CURRENT-APP');\n\n            return currentAppModule;\n        };\n\n        this.getCurrentApp = function() {\n            var currentApp = {\n                'appModule': $localstorage.get('PLING-CURRENT-APP'),\n                'env': $localstorage.get('PLING-CURRENT-ENV')\n            };\n\n            return currentApp;\n        };\n\n        this.getCallbackUrl = function(appId, cb) {\n            httpService.post('accounts', '_oauth', { 'appid': appId })\n                .success(function (data) {\n                    if (data.callbackUrl) {\n                        cb(null, data.callbackUrl + '?token=' + tokenService.get());\n                    } else {\n                        cb('Callback url not found');\n                    }\n                })\n                .error(function (reason) {\n                    cb(reason || 'Server Unavailable', null);\n                });\n        };\n\n        this.redirect = function(url) {\n            $window.location.href = url;\n        };\n\n    }\n\n}());","(function () {\n    'use strict';\n\n    CardValidatorService.$inject = [ ];\n\n    angular.module('plingUiLite').service('cardValidatorService', CardValidatorService);\n\n    function CardValidatorService() {\n        var types = [];\n\n        types.push({\n            'niceType' : 'Visa',\n            'type' : 1,\n            'prefixPattern' : /^4$/,\n            'exactPattern' : /^4\\d*$/,\n            'gaps' : [4, 8, 12],\n            'lengths' : [13, 16],\n            'code' : {\n                'name' : 'CVV',\n                'size' : 3\n            }\n        });\n\n        types.push({\n            'niceType' : 'MasterCard',\n            'type' : 2,\n            'prefixPattern' : /^(5|5[1-5]|2|22|222|222[1-9]|2[3-6]|27[0-1]|2720)$/,\n            'exactPattern' : /^(5[1-5]|222[1-9]|2[3-6]|27[0-1]|2720)\\d*$/,\n            'gaps' : [4, 8, 12],\n            'lengths' : [16],\n            'code' : {\n                'name' : 'CVV',\n                'size' : 3\n            }\n        });\n\n        types.push({\n            'niceType' : 'Diners Club',\n            'type' : 3,\n            'prefixPattern' : /^(36|38|30[0-5])$/,\n            'exactPattern' : /^(36|38|30[0-5])\\d*$/,\n            'gaps' : [4, 8, 12],\n            'lengths' : [14, 16],\n            'code' : {\n                'name' : 'CVV',\n                'size' : 3\n            }\n        });\n\n        types.push({\n            'niceType' : 'Elo',\n            'type' : 4,\n            'prefixPattern' : /^(636368|636369|438935|504175|451416|636297|5067|4576|4011|506699)$/,\n            'exactPattern' : /^(636368|636369|438935|504175|451416|636297|5067|4576|4011|506699)\\d*$/,\n            'gaps' : [4, 8, 12],\n            'lengths' : [16],\n            'code' : {\n                'name' : 'CVV',\n                'size' : 3\n            }\n        });\n\n        function luhn10(identifier) {\n            var sum = 0;\n            var alt = false;\n            var i = identifier.length - 1;\n            var num;\n\n            while (i >= 0) {\n                num = parseInt(identifier.charAt(i), 10);\n\n                if (alt) {\n                    num *= 2;\n                    if (num > 9) {\n                        num = (num % 10) + 1; // eslint-disable-line no-extra-parens\n                    }\n                }\n\n                alt = !alt;\n\n                sum += num;\n\n                i--;\n            }\n\n            return sum % 10 === 0;\n        }\n\n        function validateDate (date) {\n            var now = new Date();\n            var month = parseInt(date.substr(0, 2), 10) - 1;\n            var year = parseInt(date.substr(2, 2), 10) + 2000;\n\n            if (month < 0 || month > 11 || year - now.getFullYear() > 15)\n                return false;\n\n            return new Date(year, month, 1).getTime() > now.getTime();\n        }\n\n        this.getValidYears = function() {\n            var i;\n            var nowYear = new Date().getFullYear();\n            var validYears = [];\n\n            for (i = nowYear; i <= nowYear + 15; i++)\n                validYears.push(i);\n\n            return validYears;\n        };\n\n        this.validate = function (cardNumber, dateExpiration, cvv) {\n            var number, numberResult, dateResult, i, validType;\n\n            if (!cardNumber)\n                return {\n                    'isValid' : false,\n                    'type'    : null\n                };\n\n            number = cardNumber.toString();\n\n            for (i=0; i<types.length; i++) {\n                if (types[i].exactPattern.test(number)) {\n                    validType = types[i];\n                    break;\n                }\n            }\n\n            if (!validType)\n                return {\n                    'isValid' : false,\n                    'type'    : null\n                };\n\n            numberResult = luhn10(number);\n            dateResult = validateDate(dateExpiration);\n\n            return {\n                'isValid' : numberResult && dateResult && cvv.length >= 3,\n                'type'    : validType\n            };\n        };\n\n        this.validateDate = function (dateExpiration) {\n            var dateResult;\n\n            dateResult = validateDate(dateExpiration);\n\n            return {\n                'isValid' : dateResult\n            };\n        };\n\n        this.validateCardNumber = function (cardNumber) {\n            var number, numberResult, i, validType;\n\n            if (!cardNumber)\n                return {\n                    'isValid'  : false,\n                    'type'     : null\n                };\n\n            number = cardNumber.toString();\n\n            for (i=0; i<types.length; i++) {\n                if (types[i].exactPattern.test(number)) {\n                    validType = types[i];\n                    break;\n                }\n            }\n\n            if (!validType)\n                return {\n                    'isValid' : false,\n                    'type'    : null\n                };\n\n            numberResult = luhn10(number);\n\n            return {\n                'isValid' : numberResult,\n                'type'    : validType\n            };\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .service('cepService', CepService);\n\n    CepService.$inject = [ 'httpService' ];\n\n    function CepService(httpService) {\n\n        this.getCep = function (cep) {\n            return httpService.get('smart', 'cep', cep);\n        };\n    }\n\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .service('coreApiService', CoreApiService);\n\n    CoreApiService.$inject = [ 'boot.options', '$window', '$rootScope', '$http' ];\n\n    function CoreApiService(options, $window, $rootScope, $http) {\n\n        var self = this;\n\n        /*\n        *  url do core obtido do conf.json da aplicacao corrente concatenado com parametros\n        * @param {string} nome da aplicacao. ex: 'accounts', 'drive', 'integra'\n        * @param {string} nome do modulo. ex: 'contactPreferences', 'users/list'.\n        * @returns {string} concatenacao da url do core com parametros.\n        */\n        this.getAppCoreUrl = function (app, module) {\n            var url;\n\n            url = options.core_url + options.def_api_version;\n\n            url += app ? '/' + app : '';\n            url += module ? '/' + module : '';\n\n            return url;\n        };\n\n        // Returns Application name capitalizing the first letter with UpperCase\n        this.getApplicationName = function () {\n            return options.def_api_app.charAt(0).toUpperCase() + options.def_api_app.slice(1);\n        };\n\n        this.redirectToLoginWithCallback = function(callbackUrl) {\n            var callbackQueryString;\n\n            $rootScope.$emit('PLING-SERVICE-BAR-ISLOADING', true);\n\n            // Seta callback url\n            callbackQueryString = callbackUrl ? '?callbackurl=' + callbackUrl : '';\n\n            // Busca a URL do login por ambiente (conf.json)\n            $http.get(self.getAppCoreUrl('accounts', 'products/Login/' + options.environment))\n                .success(function(data) {\n                    if (data)\n                        $window.location.href = data.callbackUrl + callbackQueryString;\n                })\n                .error(function() {\n                    console.log('Erro ao obter URL para aplicação de Login'); // eslint-disable-line\n                    $rootScope.$emit('PLING-SERVICE-BAR-ISLOADING', false);\n                    return false;\n                });\n        };\n\n        this.redirectToControlPanel = function() {\n            $rootScope.$emit('PLING-SERVICE-BAR-ISLOADING', true);\n\n            $http.get(self.getAppCoreUrl('accounts', 'products/Painel/' + options.environment))\n                .success(function(data) {\n                    if (data)\n                        $window.location.href = data.callbackUrl;\n                })\n                .error(function() {\n                    console.log('Erro ao obter URL para Minha Conta'); // eslint-disable-line\n                    $rootScope.$emit('PLING-SERVICE-BAR-ISLOADING', false);\n                    return false;\n                });\n        };\n\n        this.getSocialMedia = function() {\n            return {\n                'facebook' : options.facebook,\n                'twitter'  : options.twitter\n            };\n        };\n\n        this.getCurrentBusiness =  function () {\n            return options.current_business || 'psicologia';\n        };\n    }\n\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .service('credentialsService', CredentialsService);\n\n    CredentialsService.$inject = [ 'httpService', '$localstorage', 'coreApiService', '$q' ];\n\n    function CredentialsService(httpService, $localstorage, core, $q) {\n\n        function getCredential(cb) {\n            httpService.get('accounts', 'me')\n                .success(function(data) {\n                    $localstorage.setObject('PLING-USER', data);\n                    return cb(null, data);\n                })\n                .error(function(reason) {\n                    console.log(reason); // eslint-disable-line\n                    return cb(reason);\n                });\n        }\n\n        this.logout = function () {\n            // Consumir o Core para o token entrar em Blacklist\n            httpService.post('accounts', 'logout')\n                .success(function() {\n                    $localstorage.clearAll();\n                    core.redirectToLoginWithCallback();\n                })\n                .error(function(reason) {\n                    console.log(reason); // eslint-disable-line no-console\n                });\n        };\n\n        this.login = function(credential) {\n            var deferred = $q.defer();\n\n            httpService.post('accounts', 'login', credential)\n                .success(function(loginData) {\n                    $localstorage.set('PLING-TOKEN', loginData.token);\n\n                    getCredential(function(err, credential) {\n                        if (err)\n                            return deferred.reject(err);\n\n                        return deferred.resolve(credential);\n                    });\n                })\n                .error(function(reason) {\n                    console.log(reason); // eslint-disable-line\n                    return deferred.reject(reason);\n                });\n\n            return deferred.promise;\n        };\n\n        this.getLocal = function () {\n            var userData = $localstorage.get('PLING-USER');\n\n            if (!userData) return null;\n\n            userData = JSON.parse(userData);\n            return userData;\n        };\n\n    }\n\n}());","(function() {\n    'use strict';\n\n    CustomersService.$inject = ['$localstorage', 'httpService', '$q'];\n\n    angular.module('plingUiLite').service('customersService', CustomersService);\n\n    function CustomersService($localstorage, httpService, $q) {\n\n        this.createCustomer = function(customer) {\n            var deferred = $q.defer();\n            var env = $localstorage.get('PLING-CURRENT-ENV');\n\n            httpService.post('accounts', 'customers/admin/' + env, customer)\n                .success(function(customerData) {\n                    deferred.resolve(customerData);\n                })\n                .error(function(reason) {\n                    console.log(reason); // eslint-disable-line\n                    deferred.reject(reason);\n                });\n\n            return deferred.promise;\n        };\n\n        this.updateCustomer = function(customer) {\n            var deferred = $q.defer();\n\n            httpService.put('accounts', 'customers', customer)\n                .success(function(data) {\n                    deferred.resolve(data);\n                })\n                .error(function(reason) {\n                    console.log(reason); // eslint-disable-line\n                    deferred.reject(reason);\n                });\n\n            return deferred.promise;\n        };\n\n        this.getCustomer = function(customerId) {\n            var deferred = $q.defer();\n\n            httpService.get('accounts', 'customers', customerId)\n                .success(function(data) {\n                    deferred.resolve(data);\n                })\n                .error(function(reason) {\n                    deferred.reject(reason);\n                });\n\n            return deferred.promise;\n        };\n    }\n\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .service('httpHelperService', HttpHelperService);\n\n    HttpHelperService.$inject = [ '$http', 'coreApiService', '$q' ];\n\n    function HttpHelperService($http, core, $q) {\n\n        var groups = {};\n\n        this.registerUrl = function (url, groupName) {\n            var defer;\n\n            if (!groupName)\n                groupName = 'default';\n\n            if (!groups[groupName]) {\n                defer = $q.defer();\n                groups[groupName] = defer;\n            } else\n                defer = groups[groupName];\n\n            return defer.promise;\n        };\n\n        this.cancelRequest = function (groupName) {\n            if (!groupName)\n                groupName = 'default';\n\n            groups[groupName].resolve('cancelled');\n            delete groups[groupName];\n        };\n    }\n\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .service('httpService', HttpService);\n\n    HttpService.$inject = [ '$http', 'coreApiService', 'httpHelperService' ];\n\n    function HttpService($http, core) {\n\n        this.save = function (app, module, data) {\n            return $http.post(core.getAppCoreUrl(app, module), data);\n        };\n\n        this.update = function (app, module, data) {\n            return $http.put(core.getAppCoreUrl(app, module), data);\n        };\n\n        this.upload = function (app, module, file) {\n            return $http\n               .post(core.getAppCoreUrl(app, module), file, {\n                   'transformRequest' : angular.identity,\n                   'headers'          : { 'Content-Type': undefined }  // eslint-disable-line\n               });\n        };\n\n        this.get = function (app, module, id) {\n            var url = core.getAppCoreUrl(app, module),\n                type;\n\n            if (id) {\n                url += '/' + id;\n            } else if (module.indexOf('public') > 0) {\n                type = {\n                    'responseType': 'arraybuffer'\n                };\n            }\n            return $http.get(url, type);\n        };\n\n        this.getImage = function (url, cb) {\n            this.get('credentials/public?imagepath=' + url)\n                .success(function (imageDownloadData) {\n                    var blob   = new Blob([ imageDownloadData ], { 'type': 'image/jpeg' }),\n                        reader = new FileReader();\n\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = function () {\n                        cb(null, reader.result);\n                    };\n                    // cb(null, objectUrl);\n                })\n                .error(function (err) {\n                    cb(err);\n                });\n        };\n\n        this.post = function (app, module, data) {\n            var req = {\n                'method'  : 'POST',\n                'url'     : core.getAppCoreUrl(app, module),\n                'headers' : {\n                    'Content-Type': 'application/json'\n                },\n                'data': data\n            };\n\n            return $http(req);\n        };\n\n        this.put = function (app, module, data) {\n            var req = {\n                'method'  : 'PUT',\n                'url'     : core.getAppCoreUrl(app, module),\n                'headers' : {\n                    'Content-Type': 'application/json'\n                },\n                'data': data\n            };\n\n            return $http(req);\n        };\n\n        this.delete = function (app, module, id) {\n            var req = {\n                'method'  : 'DELETE',\n                'url'     : core.getAppCoreUrl(app, module) + '/' + id,\n                'headers' : {\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            return $http(req);\n        };\n\n    }\n\n}());\n","(function() {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .service('tokenService', TokenService);\n\n    TokenService.$inject = [ '$http', '$localstorage', 'coreApiService' ];\n\n    function TokenService($http, $localstorage, coreApiService) {\n\n        this.get = function() {\n            return $localstorage.get('PLING-TOKEN');\n        };\n\n        this.set = function(token) {\n            if (token) {\n                $localstorage.set('PLING-TOKEN', token);\n                return true;\n            }\n\n            return false;\n        };\n\n        this.validate = function (cb) {\n            $http.get(coreApiService.getAppCoreUrl('accounts', 'me'))\n                .success(function(credentialData) {\n                    cb(null, credentialData);\n                })\n                .error(function(reason) {\n                    cb(reason);\n                });\n        };\n\n    }\n\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .service('$localstorage', $LocalStorage);\n\n    $LocalStorage.$inject = [ '$window' ];\n\n    function $LocalStorage($window) {\n        return {\n\n            'clearAll': function () {\n                $window.localStorage.clear();\n            },\n\n            'set': function (key, value) {\n                $window.localStorage[key] = value;\n            },\n\n            'get': function (key) {\n                return $window.localStorage[key];\n            },\n\n            'setObject': function (key, value) {\n                $window.localStorage[key] = JSON.stringify(value);\n            },\n\n            'getObject': function (key) {\n                return JSON.parse($window.localStorage[key] || '{}');\n            }\n        };\n    }\n\n}());","(function () {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .service('sessionstorage', $SessionStorage);\n\n    $SessionStorage.$inject = [ '$window' ];\n\n    function $SessionStorage($window) {\n        return {\n\n            'clearAll': function () {\n                $window.localStorage.clear();\n            },\n\n            'set': function (key, value) {\n                $window.localStorage[key] = value;\n            },\n\n            'get': function (key) {\n                return $window.localStorage[key];\n            },\n\n            'setObject': function (key, value) {\n                $window.localStorage[key] = JSON.stringify(value);\n            },\n\n            'getObject': function (key) {\n                return JSON.parse($window.localStorage[key] || '{}');\n            }\n        };\n    }\n\n}());","(function () {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .factory('plingRequestInterceptor', PlingRequestInterceptor);\n\n    PlingRequestInterceptor.$inject = [ '$q', '$window' ];\n\n    function PlingRequestInterceptor($q, $window) {\n\n        return {\n\n            // On request\n            'request': function (config) {\n                var isAuth = $window.localStorage.getItem('PLING-TOKEN');\n\n                // Add Token info to every request\n                if (isAuth !== false)\n                    config.headers.Authorization = $window.localStorage.getItem('PLING-TOKEN');\n\n                return config;\n            },\n\n            // On request error\n            'requestError': function (reason) {\n\n                // Return the promise error reason.\n                return $q.reject(reason);\n            },\n\n            // On response success\n            'response': function (response) {\n\n                // Return the response or promise.\n                return response || $q.when(response);\n            },\n\n            // On response error\n            'responseError': function (reason) {\n\n                // Return the promise error reason.\n                return $q.reject(reason);\n            }\n\n        };\n    }\n\n}(document, window.console, window.pling));","(function () {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .factory('$exceptionHandler', PlingUiExceptionHandler);\n\n    PlingUiExceptionHandler.$inject = ['$injector'];\n\n    function PlingUiExceptionHandler($injector) {\n\n        return function (exception, cause) {\n\n            // preparing message to be dispatched\n            var dispatcher = null,\n                logger = null,\n                data = {\n                    'error': exception,\n                    'details': cause\n                };\n\n            // logging\n            logger = $injector.get('$log');\n            logger.error(exception);\n\n            if (cause) {\n                logger.debug(cause);\n            }\n\n            // dispatching message\n            dispatcher = $injector.get('$rootScope');\n            dispatcher.$broadcast('PLINGUI_INTERNAL_ERROR', data);\n        };\n    }\n\n}());","(function () {\n    'use strict';\n\n    angular\n        .module('plingUiLite')\n        .factory('shadowLogger', PlingUiLogger);\n\n    function PlingUiLogger() {\n\n        return function ($delegate) {\n\n            return {\n\n                'log': function () {\n                    this.dispatch('log', arguments);\n                },\n\n                'info': function () {\n                    this.dispatch('info', arguments);\n                },\n\n                'error': function () {\n                    this.dispatch('error', arguments);\n                },\n\n                'warn': function () {\n                    this.dispatch('warn', arguments);\n                },\n\n                'dispatch': function (method, params) {\n                    // defining method\n                    var proc = $delegate[method] || $delegate.log,\n                        stamp = new Date().toString(),\n                        prefix = '[' + stamp + '][' + method + ']::',\n                        msg = [],\n                        arg;\n\n                    if (method) {\n                        // preparing msg\n                        msg.push(prefix);\n\n                        // joining params\n                        for (arg in params) {\n                            if (params.hasOwnProperty(arg)) {\n                                msg.push(params[arg]);\n                            }\n                        }\n\n                        // applying log info\n                        proc.apply(null, msg);\n                    }\n                }\n            };\n        };\n    }\n}());"]}